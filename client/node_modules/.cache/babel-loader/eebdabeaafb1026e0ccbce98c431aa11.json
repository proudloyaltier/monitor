{"ast":null,"code":"var _jsxFileName = \"/Users/jacob.robinson/Desktop/Projects/monitor/client/src/components/sensor-history-graph.jsx\";\nimport React from 'react';\nimport * as ReactGoogleCharts from 'react-google-charts';\nimport * as firebase from 'firebase';\nfirebase.initializeApp({\n  apiKey: 'AIzaSyB87R_NkLPy2lUQFHb_3japiTDrlJkvp7c',\n  authDomain: 'forcloud-monitor-db.firebaseapp.com',\n  databaseURL: 'https://forcloud-monitor-db.firebaseio.com',\n  projectId: 'forcloud-monitor-db',\n  storageBucket: '',\n  messagingSenderId: '538640326535',\n  appId: '1:538640326535:web:b62493e6dd63f11b48bd22'\n});\nconst database = firebase.database();\n\nclass SensorHistoryGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    return React.createElement(ReactGoogleCharts.Chart, {\n      chartType: \"Line\",\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    const headers = [];\n    database.ref('sensors/history').on('child_added', child => {\n      const data = [];\n      data.push(child.key);\n      child.val().sensors.forEach(sensor => {\n        const name = sensor.name;\n\n        if (!headers.includes(name)) {\n          headers.push(name);\n        }\n\n        data.push(sensor.value);\n      });\n      this.setState({\n        data: this.state.data.concat(data)\n      });\n    });\n  }\n\n}\n\nexport default SensorHistoryGraph;","map":{"version":3,"sources":["/Users/jacob.robinson/Desktop/Projects/monitor/client/src/components/sensor-history-graph.jsx"],"names":["React","ReactGoogleCharts","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","SensorHistoryGraph","Component","state","data","render","componentDidMount","headers","ref","on","child","push","key","val","sensors","forEach","sensor","name","includes","value","setState","concat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,iBAAZ,MAAmC,qBAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEAA,QAAQ,CAACC,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,WAAW,EAAE,4CAHQ;AAIrBC,EAAAA,SAAS,EAAE,qBAJU;AAKrBC,EAAAA,aAAa,EAAE,EALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB;AAUA,MAAMC,QAAQ,GAAGT,QAAQ,CAACS,QAAT,EAAjB;;AAEA,MAAMC,kBAAN,SAAiCZ,KAAK,CAACa,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADuC;AAAA;;AAG/CC,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,iBAAD,CAAmB,KAAnB;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDE,EAAAA,iBAAiB,GAAI;AACnB,UAAMC,OAAO,GAAG,EAAhB;AAEAP,IAAAA,QAAQ,CAACQ,GAAT,CAAa,iBAAb,EAAgCC,EAAhC,CAAmC,aAAnC,EAAkDC,KAAK,IAAI;AACzD,YAAMN,IAAI,GAAG,EAAb;AAEMA,MAAAA,IAAI,CAACO,IAAL,CAAUD,KAAK,CAACE,GAAhB;AAENF,MAAAA,KAAK,CAACG,GAAN,GAAYC,OAAZ,CAAoBC,OAApB,CAA4BC,MAAM,IAAI;AAAA,cAC5BC,IAD4B,GACnBD,MADmB,CAC5BC,IAD4B;;AAGpC,YAAI,CAACV,OAAO,CAACW,QAAR,CAAiBD,IAAjB,CAAL,EAA6B;AAC3BV,UAAAA,OAAO,CAACI,IAAR,CAAaM,IAAb;AACD;;AAEDb,QAAAA,IAAI,CAACO,IAAL,CAAUK,MAAM,CAACG,KAAjB;AACD,OARD;AAUA,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBiB,MAAhB,CAAuBjB,IAAvB;AAAR,OAAd;AACD,KAhBD;AAiBD;;AA7B8C;;AAgCjD,eAAeH,kBAAf","sourcesContent":["import React from 'react'\nimport * as ReactGoogleCharts from 'react-google-charts'\nimport * as firebase from 'firebase'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyB87R_NkLPy2lUQFHb_3japiTDrlJkvp7c',\n  authDomain: 'forcloud-monitor-db.firebaseapp.com',\n  databaseURL: 'https://forcloud-monitor-db.firebaseio.com',\n  projectId: 'forcloud-monitor-db',\n  storageBucket: '',\n  messagingSenderId: '538640326535',\n  appId: '1:538640326535:web:b62493e6dd63f11b48bd22'\n})\n\nconst database = firebase.database()\n\nclass SensorHistoryGraph extends React.Component {\n  state = { data: [] }\n\n  render () {\n    return (\n      <ReactGoogleCharts.Chart chartType=\"Line\" data={this.state.data}></ReactGoogleCharts.Chart>\n    )\n  }\n\n  componentDidMount () {\n    const headers = []\n\n    database.ref('sensors/history').on('child_added', child => {\n      const data = []\n\n            data.push(child.key)\n\n      child.val().sensors.forEach(sensor => {\n        const { name } = sensor\n\n        if (!headers.includes(name)) {\n          headers.push(name)\n        }\n\n        data.push(sensor.value)\n      })\n\n      this.setState({ data: this.state.data.concat(data) })\n    })\n  }\n}\n\nexport default SensorHistoryGraph"]},"metadata":{},"sourceType":"module"}