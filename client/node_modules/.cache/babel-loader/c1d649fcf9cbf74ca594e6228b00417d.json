{"ast":null,"code":"var _jsxFileName = \"/Users/jacob.robinson/Desktop/Projects/monitor/client/src/components/sensor-history-graph.jsx\";\nimport React from 'react';\nimport * as ReactGoogleCharts from 'react-google-charts';\nimport * as firebase from 'firebase';\nfirebase.initializeApp({\n  apiKey: 'AIzaSyB87R_NkLPy2lUQFHb_3japiTDrlJkvp7c',\n  authDomain: 'forcloud-monitor-db.firebaseapp.com',\n  databaseURL: 'https://forcloud-monitor-db.firebaseio.com',\n  projectId: 'forcloud-monitor-db',\n  storageBucket: '',\n  messagingSenderId: '538640326535',\n  appId: '1:538640326535:web:b62493e6dd63f11b48bd22'\n});\nconst database = firebase.database();\n\nclass SensorHistoryGraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(ReactGoogleCharts.Chart, {\n      chartType: \"Line\",\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    database.ref('sensors/history').on('child_added', child => {\n      const data = [];\n      child.val().sensors.forEach(sensor => {\n        const name = sensor.name,\n              value = sensor.value;\n        console.log(name, value);\n      });\n      this.setState({\n        data: this.state.data.concat(data)\n      });\n    });\n    fetch('/api/sensors/history').then(response => response.json()).then(data => {\n      const error = data.error;\n      if (error) throw new Error(error);\n      this.setState({\n        data: [['Time', 'Temperature', 'pH'], [new Date(0), 4, 5]]\n      });\n    });\n  }\n\n}\n\nexport default SensorHistoryGraph;","map":{"version":3,"sources":["/Users/jacob.robinson/Desktop/Projects/monitor/client/src/components/sensor-history-graph.jsx"],"names":["React","ReactGoogleCharts","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","SensorHistoryGraph","Component","state","render","data","componentDidMount","ref","on","child","val","sensors","forEach","sensor","name","value","console","log","setState","concat","fetch","then","response","json","error","Error","Date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,iBAAZ,MAAmC,qBAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEAA,QAAQ,CAACC,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,WAAW,EAAE,4CAHQ;AAIrBC,EAAAA,SAAS,EAAE,qBAJU;AAKrBC,EAAAA,aAAa,EAAE,EALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB;AAUA,MAAMC,QAAQ,GAAGT,QAAQ,CAACS,QAAT,EAAjB;;AAEA,MAAMC,kBAAN,SAAiCZ,KAAK,CAACa,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC,EADuC;AAAA;;AAG/CC,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,iBAAD,CAAmB,KAAnB;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAA0C,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnBN,IAAAA,QAAQ,CAACO,GAAT,CAAa,iBAAb,EAAgCC,EAAhC,CAAmC,aAAnC,EAAkDC,KAAK,IAAI;AACzD,YAAMJ,IAAI,GAAG,EAAb;AAEAI,MAAAA,KAAK,CAACC,GAAN,GAAYC,OAAZ,CAAoBC,OAApB,CAA4BC,MAAM,IAAI;AAAA,cAC5BC,IAD4B,GACZD,MADY,CAC5BC,IAD4B;AAAA,cACtBC,KADsB,GACZF,MADY,CACtBE,KADsB;AAGpCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,KAAlB;AACD,OAJD;AAMA,WAAKG,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,CAAgBc,MAAhB,CAAuBd,IAAvB;AAAR,OAAd;AACD,KAVD;AAYAe,IAAAA,KAAK,CAAC,sBAAD,CAAL,CAA8BC,IAA9B,CAAmCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA/C,EAAgEF,IAAhE,CAAqEhB,IAAI,IAAI;AAAA,YACnEmB,KADmE,GACzDnB,IADyD,CACnEmB,KADmE;AAG3E,UAAIA,KAAJ,EAAW,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AAEX,WAAKN,QAAL,CAAc;AACZb,QAAAA,IAAI,EAAE,CACJ,CAAC,MAAD,EAAS,aAAT,EAAwB,IAAxB,CADI,EAEJ,CAAC,IAAIqB,IAAJ,CAAS,CAAT,CAAD,EAAc,CAAd,EAAiB,CAAjB,CAFI;AADM,OAAd;AAMD,KAXD;AAYD;;AAlC8C;;AAqCjD,eAAezB,kBAAf","sourcesContent":["import React from 'react'\nimport * as ReactGoogleCharts from 'react-google-charts'\nimport * as firebase from 'firebase'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyB87R_NkLPy2lUQFHb_3japiTDrlJkvp7c',\n  authDomain: 'forcloud-monitor-db.firebaseapp.com',\n  databaseURL: 'https://forcloud-monitor-db.firebaseio.com',\n  projectId: 'forcloud-monitor-db',\n  storageBucket: '',\n  messagingSenderId: '538640326535',\n  appId: '1:538640326535:web:b62493e6dd63f11b48bd22'\n})\n\nconst database = firebase.database()\n\nclass SensorHistoryGraph extends React.Component {\n  state = {}\n\n  render () {\n    return (\n      <ReactGoogleCharts.Chart chartType=\"Line\" data={this.state.data}></ReactGoogleCharts.Chart>\n    )\n  }\n\n  componentDidMount () {\n    database.ref('sensors/history').on('child_added', child => {\n      const data = []\n\n      child.val().sensors.forEach(sensor => {\n        const { name, value } = sensor\n\n        console.log(name, value)\n      })\n\n      this.setState({ data: this.state.data.concat(data) })\n    })\n\n    fetch('/api/sensors/history').then(response => response.json()).then(data => {\n      const { error } = data\n\n      if (error) throw new Error(error)\n\n      this.setState({\n        data: [\n          ['Time', 'Temperature', 'pH'],\n          [new Date(0), 4, 5]\n        ]\n      })\n    })\n  }\n}\n\nexport default SensorHistoryGraph"]},"metadata":{},"sourceType":"module"}